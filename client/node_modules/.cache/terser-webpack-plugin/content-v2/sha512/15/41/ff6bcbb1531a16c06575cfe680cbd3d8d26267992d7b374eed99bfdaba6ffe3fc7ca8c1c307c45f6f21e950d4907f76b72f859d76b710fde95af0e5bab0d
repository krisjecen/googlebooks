{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\krisj\\\\Desktop\\\\UCBE_full_stack_program\\\\googlebooks\\\\client\\\\src\\\\components\\\\NavTabs.js\",\"C:\\\\Users\\\\krisj\\\\Desktop\\\\UCBE_full_stack_program\\\\googlebooks\\\\client\\\\src\\\\components\\\\pages\\\\Search.js\",\"C:\\\\Users\\\\krisj\\\\Desktop\\\\UCBE_full_stack_program\\\\googlebooks\\\\client\\\\src\\\\components\\\\pages\\\\Saved.js\",\"C:\\\\Users\\\\krisj\\\\Desktop\\\\UCBE_full_stack_program\\\\googlebooks\\\\client\\\\src\\\\App.js\",\"C:\\\\Users\\\\krisj\\\\Desktop\\\\UCBE_full_stack_program\\\\googlebooks\\\\client\\\\src\\\\registerServiceWorker.js\",\"C:\\\\Users\\\\krisj\\\\Desktop\\\\UCBE_full_stack_program\\\\googlebooks\\\\client\\\\src\\\\index.js\"],\"names\":[\"NavTabs\",\"react_default\",\"a\",\"createElement\",\"className\",\"react_router_dom\",\"to\",\"window\",\"location\",\"pathname\",\"Search\",\"Saved\",\"App\",\"components_NavTabs\",\"react_router\",\"exact\",\"path\",\"component\",\"isLocalhost\",\"Boolean\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"navigator\",\"serviceWorker\",\"register\",\"then\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"state\",\"controller\",\"console\",\"log\",\"catch\",\"error\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"URL\",\"process\",\"origin\",\"addEventListener\",\"concat\",\"fetch\",\"response\",\"status\",\"headers\",\"get\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\",\"registerServiceWorker\"],\"mappings\":\"yOA+BeA,IAAAA,EAtBf,WACE,OACEC,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,gBACZH,EAAAC,EAAAC,cAAA,KAAA,KAAA,0CAGAF,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,UAAUF,UAAwC,YAA7BG,OAAOC,SAASC,SAAyB,kBAAoB,YAA3F,WAIFR,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,GAAG,SACHF,UAAwC,WAA7BG,OAAOC,SAASC,SAAwB,kBAAoB,YAFzE,YCROC,IAAAA,EAXf,WACE,OACET,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KAAA,gBACAF,EAAAC,EAAAC,cAAA,IAAA,KAAA,mDCOSQ,IAAAA,EAXf,WACE,OACEV,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KAAA,eACAF,EAAAC,EAAAC,cAAA,IAAA,KAAA,qECaSS,IAAAA,EAZf,WACE,OACEX,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAACU,EAAD,MACAZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWP,IACvCT,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWN,OCHxCO,EAAcC,QACW,cAA7BZ,OAAOC,SAASY,UAEe,UAA7Bb,OAAOC,SAASY,UAEhBb,OAAOC,SAASY,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KChEjEC,EAAAA,EAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBnB,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,GAAwBtC,OAAOC,UAC3CsC,SAAWvC,OAAOC,SAASsC,OAIvC,OAGFvC,OAAOwC,iBAAiB,OAAQ,WAC9B,IAAMxB,EAAK,GAAAyB,OAAMH,GAAN,sBAEN3B,EAwCX,SAAiCK,GAE/B0B,MAAM1B,GACHI,KAAK,SAAAuB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C9B,UAAUC,cAAc8B,MAAM5B,KAAK,SAAAC,GACjCA,EAAa4B,aAAa7B,KAAK,WAC7BpB,OAAOC,SAASiD,aAKpBnC,EAAgBC,KAGnBc,MAAM,WACLF,QAAQC,IACN,mEAzDAsB,CAAwBnC,GAHxBD,EAAgBC,MC7BxBoC\",\"sourcesContent\":[\"import React from 'react'\\r\\nimport { Link } from 'react-router-dom'\\r\\n\\r\\n/**\\r\\n * Link: Provides declarative, accessible navigation around your application.\\r\\n * navigates our application to another route when clicked, just like an anchor tag.\\r\\n * But the Link component prevents our entire React application from reloading when we go to different URLs.\\r\\n * Instead, only the components that need to change will change.\\r\\n */\\r\\nfunction NavTabs () {\\r\\n  return (\\r\\n    <ul className='nav nav-tabs'>\\r\\n      <h4>\\r\\n        Google Books Search & Save Marketplace\\r\\n      </h4>\\r\\n      <li className='nav-item'>\\r\\n        <Link to='/search' className={window.location.pathname === '/search' ? 'nav-link active' : 'nav-link'}>\\r\\n          Search\\r\\n        </Link>\\r\\n      </li>\\r\\n      <li className='nav-item'>\\r\\n        <Link\\r\\n          to='/saved'\\r\\n          className={window.location.pathname === '/saved' ? 'nav-link active' : 'nav-link'}>\\r\\n          Saved\\r\\n        </Link>\\r\\n      </li>\\r\\n    </ul>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default NavTabs\\r\\n\",\"import React from 'react'\\r\\n\\r\\nfunction Search () {\\r\\n  return (\\r\\n    <div>\\r\\n      <h1>Search Books</h1>\\r\\n      <p>\\r\\n        Here is where the user will search for books.\\r\\n      </p>\\r\\n    </div>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Search\\r\\n\",\"import React from 'react'\\r\\n\\r\\nfunction Saved () {\\r\\n  return (\\r\\n    <div>\\r\\n      <h1>Saved Books</h1>\\r\\n      <p>\\r\\n        Here is where the user's list of saved books will appear.\\r\\n      </p>\\r\\n    </div>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Saved\\r\\n\",\"import React from 'react'\\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\\nimport NavTabs from './components/NavTabs'\\nimport Search from './components/pages/Search'\\nimport Saved from './components/pages/Saved'\\nimport './App.css'\\n\\nfunction App () {\\n  return (\\n    <Router>\\n      <div>\\n        <NavTabs />\\n        <Route exact path='/search' component={Search} />\\n        <Route exact path='/saved' component={Saved} />\\n      </div>\\n    </Router>\\n  )\\n}\\n\\nexport default App\\n\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === \\\"localhost\\\" ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === \\\"[::1]\\\" ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport default function register() {\\n  if (process.env.NODE_ENV === \\\"production\\\" && \\\"serviceWorker\\\" in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener(\\\"load\\\", () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (!isLocalhost) {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl);\\n      } else {\\n        // This is running on localhost. Lets check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === \\\"installed\\\") {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log(\\\"New content is available; please refresh.\\\");\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log(\\\"Content is cached for offline use.\\\");\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error(\\\"Error during service worker registration:\\\", error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get(\\\"content-type\\\").indexOf(\\\"javascript\\\") === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        \\\"No internet connection found. App is running in offline mode.\\\"\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if (\\\"serviceWorker\\\" in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\";\\nimport \\\"./index.css\\\";\\nimport App from \\\"./App\\\";\\nimport registerServiceWorker from \\\"./registerServiceWorker\\\";\\n\\nReactDOM.render(<App />, document.getElementById(\\\"root\\\"));\\nregisterServiceWorker();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{18:function(e,n,a){e.exports=a(29)},23:function(e,n,a){},28:function(e,n,a){},29:function(e,n,a){\"use strict\";a.r(n);var t=a(0),o=a.n(t),r=a(15),c=a.n(r),i=(a(23),a(8)),l=a(5);var s=function(){return o.a.createElement(\"ul\",{className:\"nav nav-tabs\"},o.a.createElement(\"h4\",null,\"Google Books Search & Save Marketplace\"),o.a.createElement(\"li\",{className:\"nav-item\"},o.a.createElement(i.b,{to:\"/search\",className:\"/search\"===window.location.pathname?\"nav-link active\":\"nav-link\"},\"Search\")),o.a.createElement(\"li\",{className:\"nav-item\"},o.a.createElement(i.b,{to:\"/saved\",className:\"/saved\"===window.location.pathname?\"nav-link active\":\"nav-link\"},\"Saved\")))};var u=function(){return o.a.createElement(\"div\",null,o.a.createElement(\"h1\",null,\"Search Books\"),o.a.createElement(\"p\",null,\"Here is where the user will search for books.\"))};var v=function(){return o.a.createElement(\"div\",null,o.a.createElement(\"h1\",null,\"Saved Books\"),o.a.createElement(\"p\",null,\"Here is where the user's list of saved books will appear.\"))};a(28);var d=function(){return o.a.createElement(i.a,null,o.a.createElement(\"div\",null,o.a.createElement(s,null),o.a.createElement(l.a,{exact:!0,path:\"/search\",component:u}),o.a.createElement(l.a,{exact:!0,path:\"/saved\",component:v})))},m=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function h(e){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var n=e.installing;n.onstatechange=function(){\"installed\"===n.state&&(navigator.serviceWorker.controller?console.log(\"New content is available; please refresh.\"):console.log(\"Content is cached for offline use.\"))}}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}c.a.render(o.a.createElement(d,null),document.getElementById(\"root\")),function(){if(\"serviceWorker\"in navigator){if(new URL(\"\",window.location).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var e=\"\".concat(\"\",\"/service-worker.js\");m?function(e){fetch(e).then(function(n){404===n.status||-1===n.headers.get(\"content-type\").indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):h(e)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(e):h(e)})}}()}},[[18,1,2]]]);","extractedComments":[]}